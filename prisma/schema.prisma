// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User  {
  id                    String                 @id @default(uuid())

  name                  String
  email                  String @unique
  password              String
  role                  UserRole
  contactNo              String
  address String
  profileImg String
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
 reveiw ReviewAndRating[]
 orders OrderModel[]

  @@map("users")
}

model Category {

  id String @id @default(uuid())
  title String

    @@map("catagories")

    books BookModel[]
}

model BookModel{

  id String @id @default(uuid())
  title String
  author String
  price Float
  genre String
  publicationDate DateTime
  userReview ReviewAndRating[]

  category Category @relation(fields: [categoryId],references: [id])
  categoryId String 
   @@map("bookModel")
}

model ReviewAndRating{

id String @id @default(uuid())
review String
rating Int

userReveiw User @relation( fields: [userId],references: [id])
userId String  


bookReveiw BookModel @relation(fields: [bookId],references: [id])
bookId String
   @@map("reviewAndRating")
}

model OrderModel{

id String @id @default(uuid())

userOrder User @relation(fields: [userId],references: [id])
userId String
orderedBooks OrderedBook[]
 status Status @default(pending)
 createdAt  DateTime  @default(now())

  @@map("orderModel")
}

model  OrderedBook{
  id String @id @default(uuid())
  orderId String
  order OrderModel @relation(fields: [orderId],references: [id])

  bookId String
  quantity Int
}
enum UserRole {
  admin
  customer
}

enum Status {
pending
shipped
delivered

}